# Makefile for UNIX 

# the compiler: gcc for C program, define as g++ for C++
CC = gcc 

# the static library archiver 
AR = ar rcs 

# compiler flags: 
# -g enable debugging 
# -Wall turn on all warnings 
# -D__USE_FIXED_PROTOTYPES__ force the compiler to use the correct headers 
# -ansi donâ€™t use GNU extensions, stick to ANSI 
# -std=c99 use newer version
CFLAGS=-g -Wall -D__USE_FIXED_PROTOTYPES__ -std=c99

# libraries
# OpenCV
OPENCV_LIBS = `pkg-config --cflags --libs opencv`

# mac OS X
OS_X_LIBS = -framework ApplicationServices

# custom
ZLIB_LIB_DIR=../../../zlib-1.2.8/outputs/debug/lib
ZLIB_STATIC_LIB_PATH=$(ZLIB_LIB_DIR)/libzlib.a
LIBPNG_LIB_DIR=../../../libpng-1.6.24/outputs/debug/lib
LIBPNG_STATIC_LIB_PATH=$(LIBPNG_LIB_DIR)/liblibpng.a
COMMON_FUNCTIONS_LIB_DIR=../../../common/outputs/debug/lib
COMMON_FUNCTIONS_STATIC_LIB_PATH=$(COMMON_FUNCTIONS_LIB_DIR)/libcommon_functions.a

# include directories
INCLUDE_DIRS= ./include ../../../zlib-1.2.8/include ../../../libpng-1.6.24/include ../../../common/include ../../../common/libraries
CFLAGS+= $(foreach d, $(INCLUDE_DIRS), -I$d)
# OpenCV headers
CFLAGS+= -I/usr/local/include

# the build target executable: 
TARGET = cocoa_helper 
LIBRARY = libcocoa_helper.a
SHARED_LIBRARY = libcocoa_helper.so

# on macOS build .dylib shared library
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Darwin)
	DYNAMIC_LIBRARY= libcocoa_helper.dylib
else 
	DYNAMIC_LIBRARY=
endif 

# source files 
SOURCE_FILES = property_list.o strings.o exec_cmd.o images.o file_system.o

# test source files
TEST_SOURCE_FILES =

# outputs directories
OUTPUTS_DIR = outputs/debug
OUTPUTS_LIB_DIR = $(OUTPUTS_DIR)/lib
OUTPUTS_BIN_DIR = $(OUTPUTS_DIR)/bin

all: directories libraries $(TARGET)

# make outputs directories
directories: 
	@mkdir -p $(OUTPUTS_DIR)
	@mkdir -p $(OUTPUTS_LIB_DIR)
	@mkdir -p $(OUTPUTS_BIN_DIR)

libraries: $(LIBRARY) $(SHARED_LIBRARY) $(DYNAMIC_LIBRARY)

$(TARGET): $(LIBRARY)
	$(CC) $(CFLAGS) -o $(OUTPUTS_BIN_DIR)/$(TARGET) src/main.c $(OUTPUTS_LIB_DIR)/$(LIBRARY) $(OS_X_LIBS) $(COMMON_FUNCTIONS_STATIC_LIB_PATH) $(LIBPNG_STATIC_LIB_PATH) $(ZLIB_STATIC_LIB_PATH) $(OPENCV_LIBS)

$(SHARED_LIBRARY): $(SOURCE_FILES)
	$(CC) $(CFLAGS) $(OS_X_LIBS) -L$(ZLIB_LIB_DIR) -L$(LIBPNG_LIB_DIR) -L$(COMMON_FUNCTIONS_LIB_DIR) -shared -o $(OUTPUTS_LIB_DIR)/$(SHARED_LIBRARY) $(OUTPUTS_DIR)/*.o -lzlib -llibpng -lcommon_functions $(OPENCV_LIBS)

$(DYNAMIC_LIBRARY): $(SOURCE_FILES)
	$(CC) $(CFLAGS) $(OS_X_LIBS) -L$(ZLIB_LIB_DIR) -L$(LIBPNG_LIB_DIR) -L$(COMMON_FUNCTIONS_LIB_DIR) -dynamiclib -o $(OUTPUTS_LIB_DIR)/$(DYNAMIC_LIBRARY) $(OUTPUTS_DIR)/*.o -lzlib -llibpng -lcommon_functions $(OPENCV_LIBS)

$(LIBRARY): $(SOURCE_FILES)
	$(AR) $(OUTPUTS_LIB_DIR)/$(LIBRARY) $(OUTPUTS_DIR)/*.o

property_list.o: src/cocoa_helper/property_list.c include/cocoa_helper/property_list.h
	$(CC) $(CFLAGS) -c src/cocoa_helper/property_list.c -o $(OUTPUTS_DIR)/property_list.o

strings.o: src/cocoa_helper/strings.c include/cocoa_helper/strings.h
	$(CC) $(CFLAGS) -c src/cocoa_helper/strings.c -o $(OUTPUTS_DIR)/strings.o

exec_cmd.o: src/cocoa_helper/exec_cmd.c include/cocoa_helper/exec_cmd.h
	$(CC) $(CFLAGS) -c src/cocoa_helper/exec_cmd.c -o $(OUTPUTS_DIR)/exec_cmd.o

images.o: src/cocoa_helper/images.c include/cocoa_helper/images.h
	$(CC) $(CFLAGS) -c src/cocoa_helper/images.c -o $(OUTPUTS_DIR)/images.o

file_system.o: src/cocoa_helper/file_system.c include/cocoa_helper/file_system.h
	$(CC) $(CFLAGS) -c src/cocoa_helper/file_system.c -o $(OUTPUTS_DIR)/file_system.o

clean: 
	$(RM) -rf $(OUTPUTS_DIR)