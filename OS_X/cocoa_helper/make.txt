# Makefile for UNIX 

# the compiler: gcc for C program, define as g++ for C++
CC = gcc 

# the static library archiver 
AR = ar rcs 

# compiler flags: 
# -g enable debugging 
# -Wall turn on all warnings 
# -D__USE_FIXED_PROTOTYPES__ force the compiler to use the correct headers 
# -ansi donâ€™t use GNU extensions, stick to ANSI 
# -std=c99 use newer version
CFLAGS=-g -Wall -D__USE_FIXED_PROTOTYPES__ -std=c99

# include headers 
CFLAGS += -I/usr/local/include

# libraries
# OpenCV
OPENCV_LIBS = `pkg-config --cflags --libs opencv`

# OS X
OS_X_LIBS += -framework ApplicationServices

# custom 
COMMON_FUNCTIONS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/common/libcommon_functions.a
LIBPNG_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/libpng-1.6.24/liblibpng.a 
ZLIB_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/zlib-1.2.8/libzlib.a

# the build target executable: 
TARGET = cocoa_helper 
LIBRARY = libcocoa_helper.a  

all: $(TARGET)

$(TARGET): main.c $(LIBRARY)
	$(CC) $(CFLAGS) -o $(TARGET) main.c $(LIBRARY) $(OS_X_LIBS) $(COMMON_FUNCTIONS_LIBRARY) $(LIBPNG_LIBRARY) $(ZLIB_LIBRARY) $(OPENCV_LIBS)

$(LIBRARY): property_list.o strings.o exec_cmd.o images.o file_system.o
	$(AR) $(LIBRARY) property_list.o strings.o exec_cmd.o images.o file_system.o

property_list.o: property_list.c property_list.h
	$(CC) $(CFLAGS) -c property_list.c 

strings.o: strings.c strings.h 
	$(CC) $(CFLAGS) -c strings.c

exec_cmd.o: exec_cmd.c exec_cmd.h
	$(CC) $(CFLAGS) -c exec_cmd.c

images.o: images.c images.h 
	$(CC) $(CFLAGS) -c images.c 

file_system.o: file_system.c file_system.h 
	$(CC) $(CFLAGS) -c file_system.c 

clean: 
	$(RM) $(TARGET) $(LIBRARY) property_list.o strings.o exec_cmd.o images.o file_system.o